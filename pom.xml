<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>io.github.derkrischan</groupId>
	<artifactId>jpdftest</artifactId>
	<version>0.10.0-SNAPSHOT</version>
	<description>Library to test PDF files programmatically.</description>
	<url>https://github.com/derKrischan/jpdftest</url>
	<name>jPdfTest</name>
	<inceptionYear>2019</inceptionYear>

	<licenses>
		<license>
			<name>MIT License</name>
			<url>http://www.opensource.org/licenses/mit-license.php</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<scm>
		<connection>scm:git:https://github.com/derKrischan/jpdftest.git</connection>
		<developerConnection>scm:git:git@github.com:derKrischan/jpdftest.git</developerConnection>
		<url>https://github.com/derKrischan/jpdftest</url>
		<tag>HEAD</tag>
	</scm>

	<developers>
		<developer>
			<id>krischan</id>
			<name>Christian Wiech</name>
			<url>https://github.com/derKrischan/jpdftest</url>
		</developer>
	</developers>

	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>ossrh</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>

	<issueManagement>
		<url>https://github.com/derKrischan/jpdftest/issues</url>
		<system>GitHub Issues</system>
	</issueManagement>

	<ciManagement>
		<system>CircleCI</system>
		<url>https://circleci.com/gh/derKrischan/jpdftest</url>
	</ciManagement>

	<properties>
		<java.version>1.7</java.version>
		<!-- this timestamp is Used to create reproducable builds and will be controlled 
			by maven-release-plugin in the future -->
		<project.build.outputTimestamp>2019-11-30T08:04:00Z</project.build.outputTimestamp>
		<maven.compiler.showDeprecation>true</maven.compiler.showDeprecation>
		<maven.compiler.showWarnings>true</maven.compiler.showWarnings>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- maven plugin versions -->
		<build-helper-maven-plugin.version>3.2.0</build-helper-maven-plugin.version>
		<github-release-plugin.version>1.4.0</github-release-plugin.version>
		<license-maven-plugin.version>2.0.0</license-maven-plugin.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-dependency-plugin.version>3.2.0</maven-dependency-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-enforcer-plugin.version>1.4.1</maven-enforcer-plugin.version>
		<maven-failsafe-plugin.version>2.20</maven-failsafe-plugin.version>
		<maven-gpg-plugin.version>3.0.1</maven-gpg-plugin.version>
		<maven-install-plugin.version>2.5.2</maven-install-plugin.version>
		<maven-jacoco-plugin.version>0.8.7</maven-jacoco-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-javadoc-plugin.version>3.3.1</maven-javadoc-plugin.version>
		<maven-release-plugin.version>2.5.3</maven-release-plugin.version>
		<maven-resources-plugin.version>3.2.0</maven-resources-plugin.version>
		<maven-scm-api.version>1.11.3</maven-scm-api.version>
		<maven-scm-provider-gitexe.version>1.11.3</maven-scm-provider-gitexe.version>
		<maven-shade-plugin.version>3.2.4</maven-shade-plugin.version>
		<maven-source-plugin.version>3.2.1</maven-source-plugin.version>
		<maven-surefire-plugin.version>2.22.2</maven-surefire-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
		<plexus-compiler-eclipse>2.8.8</plexus-compiler-eclipse>
		<sonar-maven-plugin.version>3.9.0.2155</sonar-maven-plugin.version>
		<versions-maven-plugin.version>2.8.1</versions-maven-plugin.version>
		
		<!-- Dependency versions -->
		<annotations.findbugs.version>3.0.1u2</annotations.findbugs.version>
		<assertj.version>2.9.1</assertj.version>
		<commons-lang3.version>3.8.1</commons-lang3.version>
		<javax.activation-api.version>1.2.0</javax.activation-api.version>
		<jaxb-api.version>2.3.1</jaxb-api.version>
		<junit.version>4.13.2</junit.version>
		<pdfbox.version>2.0.24</pdfbox.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.activation</groupId>
			<artifactId>javax.activation-api</artifactId>
			<version>${javax.activation-api.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>${jaxb-api.version}</version>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>pdfbox</artifactId>
			<version>${pdfbox.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.pdfbox</groupId>
			<artifactId>preflight</artifactId>
			<version>${pdfbox.version}</version>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj.version}</version>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>com.google.code.findbugs</groupId>
			<artifactId>annotations</artifactId>
			<version>${annotations.findbugs.version}</version>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<propertyPrefix>currentVersion</propertyPrefix>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>${maven-release-plugin.version}</version>
					<inherited>true</inherited>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<tagNameFormat>@{project.artifactId}-@{project.version}</tagNameFormat>
						<useReleaseProfile>false</useReleaseProfile>
						<goals>deploy</goals>
						<releaseProfiles>sonatype-oss-release</releaseProfiles>
						<releaseVersion>${currentVersion.majorVersion}.${currentVersion.minorVersion}.${currentVersion.incrementalVersion}</releaseVersion>
						<developmentVersion>${currentVersion.majorVersion}.${currentVersion.nextMinorVersion}.0-SNAPSHOT</developmentVersion>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-provider-gitexe</artifactId>
							<version>${maven-scm-provider-gitexe.version}</version>
						</dependency>
						<dependency>
							<groupId>org.apache.maven.scm</groupId>
							<artifactId>maven-scm-api</artifactId>
							<version>${maven-scm-api.version}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>de.jutzig</groupId>
					<artifactId>github-release-plugin</artifactId>
					<version>${github-release-plugin.version}</version>
					<inherited>false</inherited>
					<executions>
						<execution>
							<id>github-upload</id>
							<phase>deploy</phase>
							<goals>
								<goal>release</goal>
							</goals>
							<inherited>false</inherited>
							<configuration>
								<description>Automated feature release preformed by maven plugin</description>
								<failOnExistingRelease>true</failOnExistingRelease>
								<releaseName>v${project.version}</releaseName>
								<artifact>${project.build.directory}/${project.artifactId}-${project.version}.jar</artifact>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${maven-install-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${versions-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>org.codehaus.plexus</groupId>
							<artifactId>plexus-compiler-eclipse</artifactId>
							<version>${plexus-compiler-eclipse}</version>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-dependency-plugin</artifactId>
					<version>${maven-dependency-plugin.version}</version>
					<executions>
						<execution>
							<id>analyze</id>
							<goals>
								<goal>analyze-only</goal>
							</goals>
							<configuration>
								<failOnWarning>false</failOnWarning>
								<outputXML>true</outputXML>
								<ignoreNonCompile>true</ignoreNonCompile>
								<ignoredUnusedDeclaredDependencies>
									<ignoredUnusedDeclaredDependency>javax.activation:javax.activation-api</ignoredUnusedDeclaredDependency>
									<ignoredUnusedDeclaredDependency>javax.xml.bind:jaxb-api</ignoredUnusedDeclaredDependency>
								</ignoredUnusedDeclaredDependencies>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
					<configuration>
						<uniqueVersion>false</uniqueVersion>
						<!-- Skip execution in favor for nexus-staging-maven-plugin -->
						<skip>true</skip>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-enforcer-plugin</artifactId>
					<version>${maven-enforcer-plugin.version}</version>
					<configuration>
						<rules>
							<requireMavenVersion>
								<version>[3.2,)</version>
							</requireMavenVersion>
							<requireJavaVersion>
								<version>[${java.version},)</version>
							</requireJavaVersion>
						</rules>
					</configuration>
					<executions>
						<execution>
							<id>enforce-versions</id>
							<goals>
								<goal>enforce</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
					<configuration>
						<!-- necessary for shade plugin in bundle-artifacts because otherwise 
							it won't start -->
						<skipIfEmpty>false</skipIfEmpty>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
					<configuration>
						<createDependencyReducedPom>false</createDependencyReducedPom>
						<filters>
							<filter>
								<artifact>*:*</artifact>
								<excludes>
									<exclude>META-INF/*.SF</exclude>
									<exclude>META-INF/*.DSA</exclude>
									<exclude>META-INF/*.RSA</exclude>
									<exclude>LICENSE</exclude>
									<exclude>NOTICE</exclude>
								</excludes>
							</filter>
						</filters>
					</configuration>
					<executions>
						<execution>
							<id>fat-jar</id>
							<phase>package</phase>
							<goals>
								<goal>shade</goal>
							</goals>
							<configuration>
								<transformers>
									<transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer" />
									<transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
										<manifestEntries>
											<Main-Class>${application.class}</Main-Class>
											<X-Compile-Source-JDK>${maven.compiler.source}</X-Compile-Source-JDK>
											<X-Compile-Target-JDK>${maven.compiler.target}</X-Compile-Target-JDK>
										</manifestEntries>
										<mainClass />
									</transformer>
								</transformers>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-source-plugin</artifactId>
					<version>${maven-source-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>license-maven-plugin</artifactId>
					<version>${license-maven-plugin.version}</version>
					<configuration>
						<acceptPomPackaging>true</acceptPomPackaging>
						<outputDirectory>${project.build.directory}/generated-sources/license</outputDirectory>
						<excludedLicenses>
							<excludedLicense>Public Domain</excludedLicense>
							<excludedLicense>GNU General Public License v2.0</excludedLicense>
							<excludedLicense>CPAL-1.0</excludedLicense>
						</excludedLicenses>
						<failOnBlacklist>false</failOnBlacklist>
						<failOnMissing>false</failOnMissing>
						<includeTransitiveDependencies>true</includeTransitiveDependencies>
					</configuration>
					<executions>
						<execution>
							<id>download-licenses</id>
							<goals>
								<goal>add-third-party</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.sonatype.plugins</groupId>
					<artifactId>nexus-staging-maven-plugin</artifactId>
					<version>${nexus-staging-maven-plugin.version}</version>
					<extensions>true</extensions>
					<configuration>
						<serverId>ossrh</serverId>
						<nexusUrl>https://oss.sonatype.org/</nexusUrl>
						<autoReleaseAfterClose>true</autoReleaseAfterClose>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${maven-jacoco-plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>prepare-agent</goal>
							</goals>
						</execution>
						<execution>
							<id>report</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>report</goal>
							</goals>
						</execution>
						<execution>
							<id>jacoco-check</id>
							<goals>
								<goal>check</goal>
							</goals>
							<configuration>
								<rules>
									<rule>
										<limits>
											<limit>
												<minimum>0.5</minimum>
											</limit>
										</limits>
									</rule>
								</rules>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.sonarsource.scanner.maven</groupId>
					<artifactId>sonar-maven-plugin</artifactId>
					<version>${sonar-maven-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<!-- We enable all these plugins by default. -->
			<id>dev</id>
			<activation>
				<activeByDefault>true</activeByDefault>
				<file>
					<exists>pom.xml</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-enforcer-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-compiler-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-resources-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.jacoco</groupId>
						<artifactId>jacoco-maven-plugin</artifactId>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-dependency-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>

		<!-- Sonatype OSS release -->
		<profile>
			<id>sonatype-oss-release</id>
			<build>
				<plugins>
					<!-- Source -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- Javadoc -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>${maven-javadoc-plugin.version}</version>
						<configuration>
							<aggregate>true</aggregate>
							<show>public</show>
						</configuration>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>

					<!-- GPG -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>${maven-gpg-plugin.version}</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<keyname>05338FA434B8A228</keyname>
									<passphraseServerId>gpg.krischan</passphraseServerId>
									<useAgent>true</useAgent>
								</configuration>
							</execution>
						</executions>
					</plugin>
					<!-- Deploy via nexus-staging-maven-plugin -->
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
