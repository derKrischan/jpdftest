package io.github.derkrischan.pdftest;

import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

import org.junit.Test;

/**
 * Tests for PDF text verification.
 * 
 * @author krischan
 *
 */
public class EncryptedPdfAssertionOpenTest {

	@Test
	public void givenPdfAsFile_shouldCreatePdfAssertions() {
		PdfAssertions.assertThat(new File("src/test/resources/pdf/dummy.128.pdf"), "bar").pageCount().isEqualTo(1);
	}

	@Test
	public void givenPdfAsFilename_shouldCreatePdfAssertions() {
		PdfAssertions.assertThat("src/test/resources/pdf/dummy.128.pdf", "bar").pageCount().isEqualTo(1);
	}

	@Test
	public void givenPdfAsPath_shouldCreatePdfAssertions() {
		PdfAssertions.assertThat(Paths.get("src/test/resources/pdf/dummy.128.pdf"), "bar").pageCount().isEqualTo(1);
	}

	@Test
	public void givenPdfAsInputStream_shouldCreatePdfAssertions() {
		PdfAssertions.assertThat(ClassLoader.getSystemResourceAsStream("pdf/dummy.128.pdf"), "bar").pageCount().isEqualTo(1);
	}
	
	@Test
	public void givenPdfAsByteArray_shouldCreatePdfAssertions() throws IOException {
		PdfAssertions.assertThat(Files.readAllBytes(new File("src/test/resources/pdf/dummy.128.pdf").toPath()), "bar").pageCount().isEqualTo(1);
	}

	@Test(expected = AssertionError.class)
	public void givenPdfAsInputWithWrongPassword_shouldThrowAssertionError() {
		PdfAssertions.assertThat(ClassLoader.getSystemResourceAsStream("pdf/dummy.128.pdf"), "wrongPassword").pageCount().isEqualTo(1);
	}
	
}
